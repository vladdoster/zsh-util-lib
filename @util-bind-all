#!/usr/bin/env zsh

emulate -LR zsh -o extended_glob -o warn_create_global -o typeset_silent \
    -o no_short_loops -o rc_quotes

local ADDED_BLOCK=$1 DO_FORWARD=$2 ADDED_BLOCK_AFTER=$3

local -a maps
maps=( "${(@f)$( bindkey -l )}" )
maps=( "${maps[@]:#(.safe|menuselect)}" )

local map
for map ( $maps ) {
    local -a binds
    binds=( "${(@f)$( bindkey -M $map -L )//-M [^[:blank:]]##/}" )
    # Normalize the options and remove -a
    binds=( "${binds[@]/bindkey[[:blank:]]##-a[[:blank:]]##/bindkey }" )
    binds=( "${binds[@]/bindkey[[:blank:]]##-s[[:blank:]]##-a[[:blank:]]##/bindkey -s }" )
    binds=( "${binds[@]/bindkey[[:blank:]]##-R[[:blank:]]##-a[[:blank:]]##/bindkey -R }" )
    binds=( "${binds[@]/bindkey[[:blank:]]##-R[[:blank:]]##-s[[:blank:]]##(-a[[:blank:]]##|)/bindkey -Rs }" )

    local bind
    local -A Bound
    for bind ( $binds ) {
        local -a option_key_widget
        option_key_widget=( "${(@z)bind}" )
        option_key_widget[1]=()

        [[ $option_key_widget[1] != -* ]] && option_key_widget[1,0]=( "" )
        [[ $option_key_widget[1] == -- ]] && option_key_widget[1]=""

        (( !Bound[${option_key_widget[3]}] )) && {
            Bound[${option_key_widget[3]}]=1
            local funstr="function :util-lib-${option_key_widget[3]}-fun {
                    $ADDED_BLOCK";
            if [[ -n ${${(M)DO_FORWARD:#(1|yes|on|true)}:+1} ]]; then
                funstr+="
                    if (( \${+widgets[orig-util-lib-${option_key_widget[3]}]} )); then
                        zle orig-util-lib-${option_key_widget[3]} \"\$@\"
                    else
                        zle .${option_key_widget[3]} \"\$@\"
                    fi"
                funstr+="
                    $ADDED_BLOCK_AFTER
                }";
                eval $funstr;
            fi
            if [[ ${widgets[${option_key_widget[3]}]} != builtin ]]; then
                zle -N -- orig-util-lib-${option_key_widget[3]} ${widgets[${option_key_widget[3]}]#*:}
            fi
        }
        zle -N -- ${option_key_widget[3]} :util-lib-${option_key_widget[3]}-fun
        eval "bindkey ${option_key_widget[1]} -M $map -- ${option_key_widget[2]} ${option_key_widget[3]}"
    }
}
